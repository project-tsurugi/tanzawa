## Help message resource bundle
# charset: UTF-8
#
# "\help X Y Z" mapped to key x.y.z 
# key ";" provides the help message for "\help" itself.
# key "?" provides the error message for missing message.

# header of bare help message
;=Available commands:\n\
\\exit - exit script.\n\
\\halt - exit script forcibly.\n\
\\help - show this message.\n\
\\help <command> - show help message of the command (see below).\n\
\\status - show transaction status.\n\
START TRANSACTION - starts a transaction.\n\
COMMIT - commits the current transaction.\n\
ROLLBACK - revokes the current transaction.\n\
(other statements) - submit SQL command to server.\n\
\n\
<command>:

# missing message
?=Unrecognized help command.\n\
Please type \\help to show available help commands.

# START TRANSACTION
start.transaction=Starts a new transaction.\n\
Syntax:\n\
START (LONG)? TRANSACTION <transaction-option>*\n\
\n\
LONG - Optimize this transaction for long-running operation.\n\
\       It can reduce abort ratio, but will decrease transaction throughput.\n\
\       The following transaction option will enable this option implicitly:\n\
\       - READ ONLY\n\
\       - READ ONLY IMMEDIATE\n\
\       - WRITE PRESERVE\n\
\       - READ AREA\n\
\n\
<transaction-option>:\n\
READ ONLY - the transaction never insert/update/delete any rows.\n\
READ ONLY IMMEDIATE - same to "READ ONLY".\n\
READ ONLY DEFERRABLE - the transaction never insert/update/delete any rows, may retrieve not fresh rows.\n\
WRITE PRESERVE <table-name> [, ...] - declares insert/update/delete target tables, if this is specified,\n\
\                                      the transaction cannot modify other tables.\n\
READ AREA INCLUDE - <table-name> [, ...] - declares referring (select/insert/update/delete) tables,\n\
\                                           if this is specified, the transaction cannot touch other tables.\n\
READ AREA EXCULUDE - <table-name> [, ...] - declares NEVER referring (select/insert/update/delete) tables,\n\
\                                            if this is specified, the transaction cannot touch those tables.\n\
EXECUTE PRIOR - executes this transaction prior to any other transactions.\n\
\                If there are running transactions are available, this transaction will start after the running\n\
\                transactions will have been finished.\n\
\                To enable this feature, specify "START LONG TRANSACTION".\n\
EXECUTE PRIOR DEFERRABLE - same to "EXECUTE PRIOR".\n\
EXECUTE PRIOR IMMEDIATE - executes this transaction prior to any other transactions.\n\
\                          If there are running transactions are available, the running will be failed.\n\
\                          To enable this feature, specify "START LONG TRANSACTION".\n\
EXECUTE EXCLUDING - Behaves like as "EXECUTE PRIOR", and exhibits new transactions until this transaction was finished. \n\
EXECUTE EXCLUDING IMMEDIATE - Behaves like as "EXECUTE PRIOR IMMEDIATE", and exhibits new transactions \n\
\                              until this transaction was finished.\n\
AS <label> - sets a label to the transaction.\n\
WITH <key>=<value> [,...] - sets transaction configurations.
begin=@start.transaction
begin.transaction=@start.transaction

# COMMIT
commit=Commits the current transaction.\n\
Syntax:\n\
COMMIT <commit-option>\n\
\n\
<commit-option>:\n\
WAIT FOR ACCEPTED - \n\
WAIT FOR AVAILABLE - \n\
WAIT FOR STORED - \n\
WAIT FOR PROPAGATED - \n\


# ROLLBACK
rollback=Revoke this current transaction.\n\
Syntax:\n\
ROLLBACK
