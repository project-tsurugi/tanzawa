name: Tanzawa-CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  Build:
    runs-on: [self-hosted, docker]
    timeout-minutes: 30
    container:
      image: ghcr.io/project-tsurugi/oltp-sandbox:ubuntu-20.04
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_PAT }}
      volumes:
        - /work/docker-cache/.gradle:/root/.gradle
    defaults:
      run:
        shell: bash
    env:
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
      GPR_USER: ${{ github.repository_owner }}
      GPR_KEY: ${{ secrets.GHCR_PAT }}

    services:
      tsurugi:
        image: ghcr.io/project-tsurugi/tsurugi:latest
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

    steps:
      - id: Setup_Java
        name: Setup_Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - id: Checkout
        name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GHA_PAT }}

      - id: Checkout_Actions
        name: Checkout_Actions
        uses: actions/checkout@v2
        with:
          repository: project-tsurugi/tsurugi-github-actions
          path: .github/actions
          ref: master
          submodules: recursive
          token: ${{ secrets.GHA_PAT }}

      - id: Assemble
        name: Assemble
        run: |
          ./gradlew -i tanzawa-core:showTsubakuroManifest clean assemble

      - id: Check
        name: Check
        run: |
          ./gradlew -i check --continue

      - id: Publish
        name: Publish
        if: contains(github.ref, '/heads/master')
        run: |
          ./gradlew -i publish

      - id: Delete_Old_Snapshot_Release
        name: Delete_Old_Snapshot_Release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        if: contains(github.ref, '/heads/master')
        with:
          delete_release: true
          tag_name: SNAPSHOT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: Create_Snapshot_Release
        name: Create_Snapshot_Release
        uses: softprops/action-gh-release@v1
        if: contains(github.ref, '/heads/master')
        with:
          prerelease: true
          draft: false
          name: snapshot_release
          tag_name: SNAPSHOT
          files: |
            modules/cli/build/distributions/tgsql-*.zip

      - id: Generate_Annotations
        name: Generate_Annotations
        uses: ./.github/actions/tsurugi-annotations-action
        if: always()
        with:
          junit_input: '**/build/test-results/**/TEST-*.xml'
          spotbugs_input: '**/build/reports/spotbugs/main/*.xml'
          checkstyle_input: '**/build/reports/checkstyle/main.xml'

      - id: Notify_Slack
        name: Notify_Slack
        uses: ./.github/actions/tsurugi-slack-action
        if: always() && (contains(github.ref, '/tags/') || contains(github.ref, '/pull/') || contains(github.ref, '/heads/master'))
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          kind: 'job-result'
          channel: 'tsurugi-build'
          status: ${{ job.status }}
          step_context: ${{ toJson(steps) }}
          username: ${{ github.workflow }}
